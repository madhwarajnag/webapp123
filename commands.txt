hostname
sudo yum -y install git
git clone https://github.com/madhwarajnag/webapp123.git
cd webapp123
ls -la
git status
git add index.html
git status
git commit -m "First commit"
git status
history
git push
git log
git branch -v
git branch test
git branch dev
git branch -v
git checkout dev
git add *
git commit
git commit -m "Test branch commit"
git branch -c
git branch -v
git checckout test
git checkout test
git merge dev
git branch -v
git checkout dev
git add *
git commit -m "Dev Branch"
git checkout test
git add *
git commit -m "Test Branch"
git branch -v
git checkout dev
git checkout master
git checkout test
git merge dev
git add *
git commit -m "merge"
git log
git branch -v
git remote -v
git push --set-uptream origin dev:webdev-1.0
git push --set-upstream origin dev:webdev-1.0
git chechout dev
git checkhout dev
git checkout dev
git push --set-upstream origin dev:webdev-1.0
git add *
git commit -m "local"
git push --set-upstream origin dev:webdev-1.0
git add *
git commit -m "local"
git push --set-upstream origin dev:webdev-1.0
git pull origin webdev-1.0
git add *
git commit -m "dev2 merge"
git push --set-upstream origin dev:webdev-1.0
history
sudo yum -y install java-1.8.0-openjdk.x86_64
sudo yum -y remove java-1.7.0-openjdk
yum repolist
sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo
sudo  rpm --import http://pkg.jenkins-ci.org/redhat-stable/jenkins-ci.org.key
sudo yum install -y  jenkins
sudo systemctl start jenkins
sudo service jenkins start
sudo chkconfig jenkins on
sudo service jenkins status
sudo cat /var/lib/jenkins/secrets/initialAdminPassword
cd webapp123
git add*
git add *
git commit -m "web push"
git push --set -upstream origin dev:webdev-1.0
git push --setupstream origin dev:webdev-1.0
git push --set-upstream origin dev:webdev-1.0
cd
cd evironment
cd environment
wget http://www-us.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
tar xzvf apache-maven-3.5.4-bin.tar.gz
sudo mv apache-maven-3.5.4 /usr/local
sudo yum -y install java-1.8.0-openjdk-devel
/usr/local/apache-maven-3.5.4/bin/mvn
sudo yum -y install ansible
ansible -playbook
ansible-playbook
ansible - playbook
chmod 600 webkey.pem
pwd
sudo vi /etc/ansible/ansible.cfg
ansible -i ansiblehosts -m ping webservers
ls -ls
ls -la
chmod 600 webkey.pem
ansible -i ansiblehosts -m ping webservers
sudo vi /etc/ansible/ansible.cfg
sudo yum -y install ansible
sudo yum -remove  ansible
sudo autoremove ansible
ansible -i ansiblehosts -m ping webservers
ansible-playbook -i ansiblehosts web.yaml
ansible-playbook -i ansiblehosts web:yaml
ansible-playbook -i ansiblehosts web.yaml
ansible-playbook -i ansiblehosts web:yaml
ansible-playbook -i ansiblehosts web.yaml
sudo pip install boto boto3 botocore
ansible-playbook createimage.yaml 
ansible-playbook createimage.yaml -e "ansible_pythin_interpreter=/usr/bin/python"
ansible-playbook createimage.yaml -e "ansible_python_interpreter=/usr/bin/python"
git clone https://github.com/mohanraz81/ansibleautomation
ansible-playbook deployvm.yaml -e "ansible_python_interpreter=/usr/bin/python"
ansible-playbook deployvm.yal -e "ansible_python_interpreter=/usr/bin/python"
ansible-playbook deployvm.yml -e "ansible_python_interpreter=/usr/bin/python"
mv ~/.aws ~/.awsbkup
ansible-playbook deployvm.yml -e "ansible_python_interpreter=/usr/bin/python"
cd webapp123
git add *
git commit -m "deploy scripts"
git add *
git commit -m "deploy scripts"
git push --set-upstream origin dev:webdev-1.0
git add *
git commit -m "deploy scripts"
git push --set-upstream origin dev:webdev-1.0
sudo yum -y install docker
sudo service docker start
sudo chkconfig docker on
sudo service docket status
sudo service docker status
whoami
sudo usermod -a -G docker ec2-user
docker info
histor
docker info
docker pull httpd:2.4
docker images
cd testadd/
cd testapp/
docket build -t madhwarajnag/myapache:1.0.
docker build -t madhwarajnag/myapache:1.0.
cd frontend
docker build -t madhwarajnag/myapache:1.0.
docker build -t madhwarajnag/myapache:1.0 .
docker images
cd
cd environment
docker run --name testapache -d -p 9000:80 madhwarajnag/myapache:1.0
curl http://localhost:9000
docker ps
docker ps -a
docker logs testapache
docker stop testapp; docker rm testapp
docker stop testapache; docker rm testapache
docker run --name testapache -d -p 9000:80 madhwarajnag/myapache:1.0
docker build -t madhwarajnag/myapache:1.0 .
docker build -t madhwarajnag/myapache:1.1 .
cd testapp
cd frontend
docker build -t madhwarajnag/myapache:1.0 .
docker run --name testapache -d -p 9000:80 madhwarajnag/myapache:1.0
docker ps -a
docker stop testapache; docker rm testapache
docker build -t madhwarajnag/myapache:1.1 .
docker run --name testapache1 -d -p 9000:80 madhwarajnag/myapache:1.1
docker ps
curl http://localhost:9000
docker run -dit --name mytest ubintu:18.04
docker build -t madhwarajnag/myubuntu:1.0
docker build -t madhwarajnag/myubuntu:1.0 .
history
docker run -d --name mytest1  -p 9001:80 madhwarajnag/myubuntu:1.0
docker ps
http://localhost:9001
docker stop f72e05016ee4; docker stop 87573d5c5cc2; docker rm 87573d5c5cc2; docker rm f72e05016ee4
docker build -t madhwarajnag/myubuntu:1.0 .
cd
ls -la
cd /environment/testapp.1/frontend
pwd
cd /environment
cd environment
cd testapp.1/frontend
docker build -t madhwarajnag/myubuntu:1.0 .
docker ps
docker ps -a
docker run -d --name mytest1  -p 9001:80 madhwarajnag/myubuntu:1.0
docker ps
http://localhost:9001
docker logs
docker logs mytest1
docker build -t madhwarajnag/myubuntu:1.0 .
docker run -d --name mytest2  -p 9001:80 madhwarajnag/myubuntu:1.0
http://localhost:9001
docker ps
http://localhost:9001
curl http://localhost:9001
docker history
cd
cd environment
docker history
docker history madhwarajnag/myubuntu:1.0
docker ps -a
docker stop 1a78dc6dc8f3; docker stop 367fd80faf37; docker rm 367fd80faf37; docker rm 1a78dc6dc8f3
docker pas -a
docker ps -a
docker run --name testapache -d -p 9000:80 -v testapache_var_log:/var/log madhwarajnag/myapache:1.0
docker ps
docker volume ls
docker inspect testapache_var_log
docker run --name testapache -d -p 9000:80 -v testapache_var_log:/var/log madhwarajnag/myapache:1.1
docker run --name testapache -d -p 9000:80 -v testapache_var_log:/var/log madhwarajnag/myapache:1.1 ^c
sudo bash
docker exec -it testapache /bin/bash
docker run -dit --name logagent -v testapache_var_log:/testapache_var_log:ro ubuntu:18.04
docker exec -it logagent /bin/bash
docker run --rm --name logagent -v testapache_var_log:/testapache_var_log:ro ubuntu:18.04
docker ps -a
docket stop testapache; docker rm testapache
docker stop testapache; docker rm testapache
docker volume ls
docker ps
docket stop 6ec5b2fb7153: docker rm 6ec5b2fb7153
docker stop logagaent ; docker rm logagent
docker stop logagent ; docker rm logagent
docker run -dit --name log agent -v /home/ec2-user ubuntu:18.40
docker run -dit --name log agent -v /home/ec2-user:/home/ec2-user ubuntu:18.40
docker run -dit --name logagent -v /home/ec2-user:/home/ec2-user ubuntu:18.40
docker run -dit --name logagent -v /home/ec2-user:/home/ec2-user ubuntu:18.04
docker volume ls
docker exec -it logagent /bin/bash
docker images
docker inspect madhwarajnag/myubuntu:1.0
docker login
docker images
docker push madhwarajnag/myubuntu
docker push madhwarajnag/myapache
dig ns student15.courseandlabs.com.
wget -O kops https://github.com/kubernetes/kops/releases/download/1.8.1/kops-linux-amd64
chmod +x ./kops
sudo mv ./kops /usr/local/bin/
wget -O kubectl https://storage.googleapis.com/kubernetes-release/release/v1.8.1/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl
aws s3api create-bucket --bucket kube-student15-courseandlabs-com  --region us-east-1
aws s3api put-bucket-versioning --bucket kube-student15-courseandlabs-com  --versioning-configuration Status=Enabled
echo "export NAME=kubecluster.student15.courseandlabs.com" >> ~/.bash_profile
echo "export KOPS_STATE_STORE=s3://kube-student15-courseandlabs-com" >> ~/.bash_profile
echo$Name
echo $Name
echo $KOPS_STATE_STORE
echo $NAME
mv ~/.aws ~/.aws
mv ~/.aws ~/.awsup
mv ~/.aws ~/.awsbkup
ssh-keygen
kops create cluster     --zones=us-east-1a,us-east-1b,us-east-1c     --master-zones=us-east-1a,us-east-1b,us-east-1c     --node-count=4     --node-size=t2.small     --master-size=t2.small     --authorization RBAC     --name ${NAME} --yes
ssh-keygen
kops create cluster     --zones=us-east-1a,us-east-1b,us-east-1c     --master-zones=us-east-1a,us-east-1b,us-east-1c     --node-count=4     --node-size=t2.small     --master-size=t2.small     --authorization RBAC     --name ${NAME} --yes
kops validate cluster
cat ~/.kube/config
kubectl get node
kubectl get nodes
kubectl get namespaces
kubectl get pods --namespace=kube-system
kubectl create namespace test
kubectl get namespace
kubectl describe namespace test
kubectl config set-context $(kubectl config current-context) --namespace=test
kubectl config view | grep namespace:
kubectl apply -f nginx.yml
kubectl get deployments
kubectl describe deployments
kubectl get rs
kubectl get pods
kubectl describe pods
kubectl describe pod nginx-deployment-8559d59d6c-m8kqc
kubectl get pod
kubectl describe pod
kubectl get servives
kubectl get services
kubectl describe service testfrontend
curl student15.courseandlabs.com
curl www.student15.courseandlabs.com
cd myubuntu
cd myapache
cd webapp123
docker build -t madhwaraj/myapache:2.0 .^C
docker build -t madhwaraj/myapache:2.0 .
docker build -t madhwarajnag/myapache:2.0 .^C
docker build -t madhwarajnag/myapache:2.0 .
cd
cd testapp1
cd testapp.1
cd environment
cd testapp.1
docker build -t madhwarajnag/myapache:2.0 .
cd
cd environment
cd testapp
cd frontend
docker build -t madhwarajnag/myapache:2.0 .
docker push madhwarajnag/myapache:2.0
cd ../..
kubectl apply -f nginx.yml
kubectl get rs
curl www.student15.courseandlabs.com
kubectl get rs
kubectl delete all --all
kubectl get rs
git clone https://github.com/kubernetes/heapster.git
kubectl apply -f deploy/kube-config/influxdb/
cd heapster
kubectl apply -f deploy/kube-config/influxdb/
kubectl apply -f deploy/kube-config/rbac/heapster-rbac.yaml
kubectl get deployment --namespace=system
kubectl get deployment --namespace=kube-system
kubectl get services --namespace=kube-system
kubectl apply -f deploy/kube-config/rbac/heapster-rbac.yaml
kubectl apply -f deploy/kube-config/influxdb/
kubectl apply -f deploy/kube-config/rbac/heapster-rbac.yaml
cd ..
kubectl apply -f auto^c
kubectl apply -f Autoscaling.yml
kubectl het hpa
kubectl get hpa
kubectl run -i --tty load-generator --image=busybox /bin/sh
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t


exit

kubectl get hpa
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
'kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
kubectl get hpa
kubectl attach load-generator-58974b7bf9-c4pnh -c load-generator -i -t
https://github.com/madhwarajnag/threetier.git
git clone https://github.com/madhwarajnag/threetier.git
cd threetier
git add *
git commit -m "test"
git push
cd ..
sudeo usermod -a -G docker jenkins
sude usermod -a -G docker jenkins
sudo usermod -a -G docker jenkins
sudo service jenkins restart
sudo cp -R /home/ec2-user/.kube /var/lib/jenkins/
sudo chown -R jenkins /var/lib/jenkins/.kube
which kubectl
cd ..
ls -la
cat .bash_history
